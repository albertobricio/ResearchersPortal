<?php
/**
 * @file
 * Module installation hooks implementation.
 */

use Drupal\Core\Config\FileStorage;
use Drupal\Core\Config\InstallStorage;
use Drupal\Core\Database\Database;

/**
 * Rename database tables and configuration objects.
 */
function bibcite_entity_update_8001() {
  $tables_name_mapping = [
    'bibliography' => 'bibcite_reference',
    'bibliography__author' => 'bibcite_reference__author',
    'bibliography__keywords' => 'bibcite_reference__keywords',
  ];
  $database_schema = Database::getConnection()->schema();
  foreach ($tables_name_mapping as $table => $new_name) {
    $database_schema->renameTable($table, $new_name);
  }

  $config_factory = \Drupal::configFactory();
  foreach ($config_factory->listAll('bibcite_entity.bibliography_type') as $config_name) {
    $config = $config_factory->getEditable($config_name);
    $config->setName("bibcite_entity.bibcite_reference_type.{$config->get('id')}");
    $config->save(TRUE);
  }
}

/**
 * Add "uid" property to "bibcite_reference" table.
 */
function bibcite_entity_update_8002() {
  $spec = [
    'type' => 'int',
    'description' => "User ID",
    'length' => 10,
    'not null' => TRUE,
    'default' => 0,
  ];
  $schema = Database::getConnection()->schema();
  $schema->addField('bibcite_reference', 'uid', $spec);
}

/**
 * Install new optional configuration (administration views).
 */
function bibcite_entity_update_8003() {
  /** @var \Drupal\Core\Config\ConfigInstallerInterface $installer */
  $installer = \Drupal::service('config.installer');

  $configs = [
    'system.action.bibcite_contributor_delete',
    'system.action.bibcite_contributor_save',
    'system.action.bibcite_keyword_delete',
    'system.action.bibcite_keyword_save',
    'system.action.bibcite_reference_delete',
    'system.action.bibcite_reference_save',
  ];

  $update_required = FALSE;
  foreach ($configs as $config_name) {
    $config = \Drupal::config($config_name);
    if ($config->isNew()) {
      $update_required = TRUE;
      break;
    }
  }

  if ($update_required) {
    $installer->installDefaultConfig('module', 'bibcite_entity');
  }

  $path = drupal_get_path('module', 'bibcite_entity') . '/' . InstallStorage::CONFIG_OPTIONAL_DIRECTORY;
  $storage = new FileStorage($path);
  $installer->installOptionalConfig($storage);
}

/**
 * Enable "Override default properties" in reference types and enable UI overrides.
 */
function bibcite_entity_update_8004() {
  $config_factory = \Drupal::configFactory();
  foreach ($config_factory->listAll('bibcite_entity.bibcite_reference_type') as $config_name) {
    $config = $config_factory->getEditable($config_name);
    $config->set('override', TRUE);
    $config->save(TRUE);
  }

  $config = $config_factory->getEditable('bibcite_entity.reference.settings');
  $config->set('ui_override.enable_form_override', TRUE);
  $config->set('display_override.enable_display_override', TRUE);
  $config->save();
}